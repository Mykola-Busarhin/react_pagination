{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","totalPages","perPage","items","onPageChange","handleArrowClick","direction","condition","pages","Math","ceil","isFirstPage","isLastPage","length","className","classNames","disabled","href","onClick","map","page","isChosen","active","item","index","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","id","onChange","event","target","value","handlePerPage","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,aAEMC,EAAmB,SAACC,EAAmBC,GAKtCA,GACHH,EAL4B,SAAdE,EACZN,EAAc,EACdA,EAAc,IAOdQ,EAAQf,EAAW,EAAGgB,KAAKC,KAAKT,EAAaC,IAC7CS,EAA8B,IAAhBX,EACdY,EAAaZ,IAAgBQ,EAAMK,OAEzC,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUL,IAAnD,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMb,EAAiB,OAAQM,IAL1C,oBAUDH,EAAMW,KAAI,SAAAC,GACT,IAAMC,EAAWD,IAASpB,EAE1B,OACE,oBAEEc,UAAWC,IAAW,YAAa,CAAEO,OAAQD,IAF/C,SAIE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPd,EAAagB,IALjB,SAQGA,KAXEA,MAiBX,oBAAIN,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,IAAnD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAMb,EAAiB,OAAQO,IAL1C,uBAWJ,6BACGT,EAAMgB,KAAI,SAACI,EAAMC,GAIhB,UAHqBA,IAAUxB,EAAc,GAAKE,MAC9BsB,EAAQxB,EAAcE,KAItC,oBAAe,UAAQ,OAAvB,SAA+BqB,GAAtBA,YClFjBpB,EAAQV,EAAW,EAAG,IACzB0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEP4B,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAEMC,EAAY,GAAK7B,EAAc,GAAKE,EAEpC4B,EAAW9B,EAAcE,EANZ,MAQfF,EAAcE,EAOlB,OACE,sBAAKY,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWd,EADX,mBACiC6B,EADjC,cACgDC,EADhD,eAnBe,GAmBf,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,SAAU,SAACC,IAnBC,SAACA,GACrBN,GAAYM,EAAMC,OAAOC,OACzBP,EAAe,GAkBLQ,CAAcH,IALlB,UAQE,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEd,YAAaA,EACbC,WAhDa,GAiDbC,QAASA,EACTC,MAAOA,EACPC,aAAcwB,QC1DtBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9108545f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  currentPage: number;\n  totalPages: number;\n  perPage: number;\n  items: string[];\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  totalPages,\n  perPage,\n  items,\n  onPageChange,\n}) => {\n  const handleArrowClick = (direction: string, condition: boolean) => {\n    const newPage = direction === 'prev'\n      ? currentPage - 1\n      : currentPage + 1;\n\n    if (!condition) {\n      onPageChange(newPage);\n    }\n  };\n\n  const pages = getNumbers(1, Math.ceil(totalPages / perPage));\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pages.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: isFirstPage })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => handleArrowClick('prev', isFirstPage)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => {\n          const isChosen = page === currentPage;\n\n          return (\n            <li\n              key={page}\n              className={classNames('page-item', { active: isChosen })}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => {\n                  onPageChange(page);\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n\n        <li className={classNames('page-item', { disabled: isLastPage })}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => handleArrowClick('next', isLastPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((item, index) => {\n          const hasfirstItem = index >= (currentPage - 1) * perPage;\n          const haslastItem = index < currentPage * perPage;\n\n          if (hasfirstItem && haslastItem) {\n            return (\n              <li key={item} data-cy=\"item\">{item}</li>\n            );\n          }\n\n          return false;\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const totalPages = 42;\n  const [perPage, setPerPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItem = 1 + (currentPage - 1) * perPage;\n\n  const lastItem = currentPage * perPage > totalPages\n    ? totalPages\n    : currentPage * perPage;\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${totalPages})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              handlePerPage(event);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        perPage={perPage}\n        items={items}\n        onPageChange={setCurrentPage}\n\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}